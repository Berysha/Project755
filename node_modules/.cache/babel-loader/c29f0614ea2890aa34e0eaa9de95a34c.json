{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Proba\\\\Desktop\\\\projekt755-master\\\\client\\\\src\\\\pages\\\\auth\\\\ForgotPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { auth } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ForgotPassword = ({\n  history\n}) => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  useEffect(() => {\n    if (user && user.token) history.push(\"/\");\n  }, [user, history]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const config = {\n      url: process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT,\n      handleCodeInApp: true\n    };\n    await auth.sendPasswordResetEmail(email, config).then(() => {\n      setEmail(\"\");\n      setLoading(false);\n      toast.success(\"Check your email for password reset link\");\n    }).catch(error => {\n      setLoading(false);\n      toast.error(error.message);\n      console.log(\"ERROR MSG IN FORGOT PASSWORD\", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container col-md-6 offset-md-3 p-5\",\n    children: [loading ? /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text-danger\",\n      children: \" Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"ForgotPassword\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"form-control\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Type your email\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-raised\",\n        disabled: !email,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 18\n  }, this);\n};\n\n_s(ForgotPassword, \"8A9WFZTp/p2AN5xk8kwnOFSkd9E=\", false, function () {\n  return [useSelector];\n});\n\n_c = ForgotPassword;\nexport default ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["C:/Users/Proba/Desktop/projekt755-master/client/src/pages/auth/ForgotPassword.js"],"names":["React","useState","useEffect","auth","toast","useSelector","ForgotPassword","history","email","setEmail","loading","setLoading","user","state","token","push","handleSubmit","e","preventDefault","config","url","process","env","REACT_APP_FORGOT_PASSWORD_REDIRECT","handleCodeInApp","sendPasswordResetEmail","then","success","catch","error","message","console","log","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAqB,gBAArB;AACA,SAAQC,KAAR,QAAoB,gBAApB;AACA,SAAQC,WAAR,QAA0B,aAA1B;;;AAGA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAE,KAAF,CAAtC;AAEA,QAAM;AAACW,IAAAA;AAAD,MAASP,WAAW,CAAEQ,KAAD,KAAY,EAAC,GAAGA;AAAJ,GAAZ,CAAD,CAA1B;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGU,IAAI,IAAIA,IAAI,CAACE,KAAhB,EAAuBP,OAAO,CAACQ,IAAR,CAAa,GAAb;AAC1B,GAFQ,EAEN,CAACH,IAAD,EAAOL,OAAP,CAFM,CAAT;;AAIA,QAAMS,YAAY,GAAE,MAAOC,CAAP,IAAY;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAMQ,MAAM,GAAE;AACVC,MAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,kCADP;AAEVC,MAAAA,eAAe,EAAE;AAFP,KAAd;AAIA,UAAMrB,IAAI,CACTsB,sBADK,CACkBjB,KADlB,EACyBW,MADzB,EAELO,IAFK,CAEA,MAAM;AACJjB,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAP,MAAAA,KAAK,CAACuB,OAAN,CAAc,0CAAd;AACP,KANK,EAOLC,KAPK,CAOEC,KAAD,IAAW;AACdlB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAP,MAAAA,KAAK,CAACyB,KAAN,CAAYA,KAAK,CAACC,OAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CH,KAA5C;AACH,KAXK,CAAN;AAYH,GApBD;;AAsBA,sBAAS;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAA,eACLnB,OAAO,gBACP;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADO,gBAGR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJM,eAKL;AAAM,MAAA,QAAQ,EAAEM,YAAhB;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,OAAZ;AACA,QAAA,SAAS,EAAC,cADV;AAEA,QAAA,KAAK,EAAER,KAFP;AAGA,QAAA,QAAQ,EAAGS,CAAD,IAAOR,QAAQ,CAACQ,CAAC,CAACgB,MAAF,CAASC,KAAV,CAHzB;AAIA,QAAA,WAAW,EAAC,iBAJZ;AAKA,QAAA,SAAS;AALT;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,QAAQ,EAAE,CAAC1B,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AAoBP,CApDD;;GAAMF,c;UAIiBD,W;;;KAJjBC,c;AAsDN,eAAeA,cAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {auth, } from \"../../firebase\";\nimport {toast} from \"react-toastify\";\nimport {useSelector} from \"react-redux\";\n\n\nconst ForgotPassword = ({history}) =>{\n        const [email, setEmail] = useState(\"\");\n        const [loading, setLoading] = useState (false);\n\n        const {user} = useSelector((state) => ({...state}));\n\n        useEffect(() => {\n            if(user && user.token) history.push(\"/\");\n        }, [user, history]);\n\n        const handleSubmit= async (e) =>{\n            e.preventDefault()\n            setLoading(true)\n\n            const config= {\n                url: process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT,\n                handleCodeInApp: true,\n            };\n            await auth\n            .sendPasswordResetEmail(email, config)\n            .then(() => {\n                    setEmail(\"\");\n                    setLoading(false);\n                    toast.success(\"Check your email for password reset link\");\n            })\n            .catch((error) => {\n                setLoading(false);\n                toast.error(error.message);\n                console.log(\"ERROR MSG IN FORGOT PASSWORD\", error);\n            });\n        };\n\n        return ( <div className=\"container col-md-6 offset-md-3 p-5\">\n           {loading ? (\n            <h4 className=\"text-danger\"> Loading</h4> \n           ): (\n           <h4>ForgotPassword</h4>)}\n            <form onSubmit={handleSubmit} >\n                <input type=\"email\" \n                className=\"form-control\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"Type your email\"\n                autoFocus\n                />\n                <br/>\n                <button className=\"btn btn-raised\" disabled={!email}>\n                Submit\n                    </button>\n            </form>\n        </div>\n        );\n};\n\nexport default ForgotPassword;"]},"metadata":{},"sourceType":"module"}