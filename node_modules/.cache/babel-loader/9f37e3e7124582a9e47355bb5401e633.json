{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Proba\\\\Desktop\\\\projekt755\\\\client\\\\src\\\\components\\\\routes\\\\UserRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport LoadingToRedirect from \"./LoadingToRedirect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserRoute = ({\n  children,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  return user && user.token ? /*#__PURE__*/_jsxDEV(Route, { ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 6\n  }, this) : /*#__PURE__*/_jsxDEV(LoadingToRedirect, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 6\n  }, this);\n};\n\n_s(UserRoute, \"Jxgif+QfY7+MStbF+F1uZ9ypUGY=\", false, function () {\n  return [useSelector];\n});\n\n_c = UserRoute;\nexport default UserRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserRoute\");","map":{"version":3,"sources":["C:/Users/Proba/Desktop/projekt755/client/src/components/routes/UserRoute.js"],"names":["React","Route","useSelector","LoadingToRedirect","UserRoute","children","rest","user","state","token"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAW,KAAGC;AAAd,CAAD,KAAyB;AAAA;;AACvC,QAAM;AAACC,IAAAA;AAAD,MAASL,WAAW,CAAEM,KAAD,KAAW,EAAC,GAAGA;AAAJ,GAAX,CAAD,CAA1B;AACA,SAAOD,IAAI,IAAIA,IAAI,CAACE,KAAb,gBACN,QAAC,KAAD,OAAWH;AAAX;AAAA;AAAA;AAAA;AAAA,UADM,gBAGN,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,UAHD;AAKH,CAPD;;GAAMF,S;UACaF,W;;;KADbE,S;AASN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport {Route} from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\nimport LoadingToRedirect from \"./LoadingToRedirect\";\n\nconst UserRoute = ({children, ...rest}) => {\n    const {user} = useSelector((state)=> ({...state}));\n    return user && user.token ?\n     <Route {...rest} />\n     :  \n     <LoadingToRedirect />\n     \n}\n\nexport default UserRoute;"]},"metadata":{},"sourceType":"module"}