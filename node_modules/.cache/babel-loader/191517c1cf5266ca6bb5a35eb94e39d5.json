{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Proba\\\\Desktop\\\\projekt755\\\\client\\\\src\\\\pages\\\\admin\\\\category\\\\CategoryUpdate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport AdminNav from \"../../../components/nav/AdminNav\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\nimport { updateCategory, getCategory, getCategories } from \"../../../functions/category\";\nimport { Link } from \"react-router-dom\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport { useParams } from \"react-router-dom\";\nimport CategoryForm from \"../../../components/forms/CaregoryForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CategoryUpdate = ({\n  history,\n  match\n}) => {\n  _s();\n\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  const [name, setName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    loadCategory();\n  }, []);\n\n  const loadCategory = () => getCategory(match.params.slug).then(c => setName(c.data.name));\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n    updateCategory(match.params.slug, {\n      name\n    }, user.token).then(res => {\n      setLoading(false);\n      setName(\"\");\n      toast.success(`\"${res.data.name}\" is updated`);\n      history.push(\"/admin/category\");\n    }).catch(err => {\n      console.log(err);\n      setLoading(false);\n\n      if (err.response.status === 400) {\n        toast.error(err.response.data);\n      }\n\n      ;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(AdminNav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [loading ? /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-success\",\n          children: \"Loading..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 45\n        }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Update Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(CategoryForm, {\n          handleSubmit: handleSubmit,\n          name: name,\n          setName: setName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CategoryUpdate, \"I2OYTi8csdyv7A4GUbwyK6HWYu0=\", false, function () {\n  return [useSelector];\n});\n\n_c = CategoryUpdate;\nexport default CategoryUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryUpdate\");","map":{"version":3,"sources":["C:/Users/Proba/Desktop/projekt755/client/src/pages/admin/category/CategoryUpdate.js"],"names":["React","useState","useEffect","AdminNav","toast","useSelector","updateCategory","getCategory","getCategories","Link","EditOutlined","DeleteOutlined","useParams","CategoryForm","CategoryUpdate","history","match","user","state","name","setName","loading","setLoading","loadCategory","params","slug","then","c","data","handleSubmit","e","preventDefault","token","res","success","push","catch","err","console","log","response","status","error"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport AdminNav from \"../../../components/nav/AdminNav\"\nimport {toast} from \"react-toastify\"\nimport {useSelector} from \"react-redux\"\nimport {updateCategory,\n    getCategory,\n    getCategories\n        } from \"../../../functions/category\"\nimport {Link} from \"react-router-dom\";\nimport {EditOutlined, DeleteOutlined} from \"@ant-design/icons\"\nimport { useParams } from \"react-router-dom\";\nimport CategoryForm from \"../../../components/forms/CaregoryForm\"\n\n\n\nconst CategoryUpdate = ({history, match}) => {\n\n    const {user} = useSelector(state => ({...state}))\n\n    const [name, setName] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n  \n\n    useEffect(() => {\n        loadCategory();\n    }, []);\n\n    const loadCategory = () =>  \n        getCategory(match.params.slug).then((c) => \n    setName(c.data.name));\n\n    const handleSubmit= (e) => {\n        e.preventDefault()\n            setLoading(true)\n             updateCategory(match.params.slug, {name}, user.token)\n                .then((res) => {\n             setLoading(false)\n            setName(\"\")\n        toast.success(`\"${res.data.name}\" is updated`)\n        history.push(\"/admin/category\")\n            \n        })\n        .catch(err => {\n            console.log(err)\n                setLoading(false) \n                    if (err.response.status === 400) {\n                toast.error(err.response.data)\n                };\n            });\n        };\n         \n        \n    \n    return (\n        <div className=\"container-fluid\">\n             <div className=\"row\">\n                 <div className=\"col-md-2\">\n                     <AdminNav />\n                        </div>\n                            <div className=\"col\">\n                                {loading ?( <h4  className=\"text-success\">Loading..</h4>) : (\n                            <h4>Update Category</h4>)}\n                       <CategoryForm  handleSubmit={handleSubmit}\n                 name={name}\n                 setName={setName}/>\n\n                   \n                </div>\n            </div>\n        </div>\n   \n    );\n };\n\n\nexport default CategoryUpdate;"]},"metadata":{},"sourceType":"module"}